{"version":3,"file":"static/js/344.cd9ce914.chunk.js","mappings":"qKAYA,MA2BA,EA3BmCA,KACjC,MAAMC,GAAWC,EAAAA,EAAAA,OACX,UAAEC,IAAcC,EAAAA,EAAAA,KAAeC,GAASA,EAAMC,OAsBpD,OAnBAC,EAAAA,EAAAA,YAAU,KACRC,QAAQC,IAAI,yDACZR,GAASS,EAAAA,EAAAA,MAAa,GACrB,CAACT,KAGJM,EAAAA,EAAAA,YAAU,KACR,GAAIJ,EAIF,OAHAK,QAAQC,IAAI,gEAGL,KACLD,QAAQC,IAAI,4DACZR,GAASS,EAAAA,EAAAA,MAAa,CAE1B,GACC,CAACP,EAAWF,IAGR,IAAI,C,sMCtBb,MA8JA,EA9J4BU,KAC1B,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,IACnCG,GAAWC,EAAAA,EAAAA,MACXjB,GAAWC,EAAAA,EAAAA,OACX,UAAEC,EAAS,UAAEgB,IAAcf,EAAAA,EAAAA,KAAgBC,GAAUA,EAAMC,OAC3Dc,GAAYC,EAAAA,EAAAA,SAAO,IAGzBd,EAAAA,EAAAA,YAAU,KACRa,EAAUE,SAAU,EACb,KACLF,EAAUE,SAAU,CAAK,IAE1B,IAoCH,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACFC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,OACRC,QAAS,4BACTC,OAAQ,KACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,eAAgB,aAChBC,SAAA,EAEFC,EAAAA,EAAAA,KAACtC,EAAAA,EAAgB,KAEjBsC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,SAAS,KAAIH,UACtBd,EAAAA,EAAAA,MAACkB,EAAAA,EAAK,CACJC,UAAW,EACXjB,GAAI,CACFkB,EAAG,EACHV,QAAS,OACTW,cAAe,SACfV,WAAY,SACZR,SAAU,YACVW,SAAA,EAEFC,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CACLC,WAAWR,EAAAA,EAAAA,KAACS,EAAAA,EAAa,IACzBC,QA3CeC,KACvBzC,QAAQC,IAAI,uCACZR,GAASS,EAAAA,EAAAA,OACTO,EAAS,IAAI,EAyCLQ,GAAI,CAAEC,SAAU,WAAYC,IAAK,GAAIC,KAAM,IAAKS,SACjD,UAIDC,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAK3B,GAAI,CAAE4B,GAAI,EAAGC,UAAW,SAAUC,GAAI,GAAIlB,SAAC,kBAInFd,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACF4B,UAAU,OACVI,SA7EWC,UAEnB,GADAC,EAAEC,iBACG/C,GAAUG,EAEf,IACEP,QAAQC,IAAI,sCACeR,GAAS2D,EAAAA,EAAAA,IAAM,CAAEC,SAAUjD,EAAOG,cAAa+C,SAGtE1C,EAAUE,SACZL,EAAS,YAEb,CAAE,MAAO8C,GACPvD,QAAQwD,MAAM,2BAA4BD,GAErC3C,EAAUE,SAEbrB,GAASS,EAAAA,EAAAA,MAEb,GA2DQe,GAAI,CACFI,MAAO,OACPI,QAAS,OACTW,cAAe,SACfV,WAAY,UACZG,SAAA,CAEDlC,IACCmC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAK,CAACC,SAAS,QAAQzC,GAAI,CAAE4B,GAAI,EAAGxB,MAAO,QAASQ,SAClDlC,KAILmC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAS,CACRC,WAAS,EACTC,MAAM,QACNC,KAAK,QACLC,MAAO3D,EACP4D,SAAWd,GAAM7C,EAAS6C,EAAEe,OAAOF,OACnCG,OAAO,SACPC,UAAQ,KAGVrC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAS,CACRC,WAAS,EACTE,KAAK,WACLD,MAAM,WACNE,MAAOxD,EACPyD,SAAWd,GAAM1C,EAAY0C,EAAEe,OAAOF,OACtCG,OAAO,SACPC,UAAQ,EACRC,WAAY,CAAE,cAAe,qBAG/BtC,EAAAA,EAAAA,KAACO,EAAAA,EAAM,CACLyB,KAAK,SACLF,WAAS,EACTjB,QAAQ,YACR1B,GAAI,CAAE8B,GAAI,EAAGF,GAAI,GACjBwB,SAAU1D,EAAUkB,SAEnBlB,EAAY,gBAAkB,aAGjCmB,EAAAA,EAAAA,KAACd,EAAAA,EAAG,CAACC,GAAI,CAAE8B,GAAI,EAAGD,UAAW,SAAUzB,MAAO,QAASQ,UACrDd,EAAAA,EAAAA,MAAC2B,EAAAA,EAAU,CAACC,QAAQ,QAAOd,SAAA,CAAC,yBACH,KACvBC,EAAAA,EAAAA,KAACwC,EAAAA,EAAI,CACH1B,UAAU,SACVD,QAAQ,QACRH,QApGW+B,KACzBvE,QAAQC,IAAI,sCACZR,GAASS,EAAAA,EAAAA,OACTO,EAAS,YAAY,EAkGPQ,GAAI,CAAEuD,WAAY,QAAS3C,SAC5B,qCAQP,C,qBCrKN4C,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,KAChDG,EAAcH,EAAQ,KACXC,EAAQ,GAAU,EAAIC,EAAeE,UAAuB,EAAID,EAAYE,KAAK,OAAQ,CACtGC,EAAG,8DACD,Y","sources":["components/auth/AuthErrorHandler.tsx","components/auth/LoginPage.tsx","../node_modules/@mui/icons-material/ArrowBack.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../store/store';\nimport { clearError } from '../../store/slices/authSlice';\n\n/**\n * AuthErrorHandler component\n * \n * This component is responsible for clearing auth errors when mounted\n * and when authError changes\n * \n * @returns null - This component doesn't render anything\n */\nconst AuthErrorHandler: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { authError } = useAppSelector(state => state.auth);\n  \n  // Clear errors when component mounts\n  useEffect(() => {\n    console.log('[AuthErrorHandler] Component mounted, clearing errors');\n    dispatch(clearError());\n  }, [dispatch]);\n  \n  // Also clear errors when authError changes and is not null\n  useEffect(() => {\n    if (authError) {\n      console.log('[AuthErrorHandler] authError detected, will clear on unmount');\n      \n      // Return cleanup function to clear error when component unmounts\n      return () => {\n        console.log('[AuthErrorHandler] Component unmounting, clearing errors');\n        dispatch(clearError());\n      };\n    }\n  }, [authError, dispatch]);\n  \n  // This component doesn't render anything\n  return null;\n};\n\nexport default AuthErrorHandler; ","import React, { useState, useRef, useEffect } from 'react';\nimport { Box, TextField, Button, Typography, Alert, Container, Paper, Link } from '@mui/material';\nimport { LoginCredentials } from '../../types/auth';\nimport { useNavigate } from 'react-router-dom';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useAppSelector, useAppDispatch } from '../../store/store';\nimport { login, clearError } from '../../store/slices/authSlice';\nimport AuthErrorHandler from './AuthErrorHandler';\n\n/**\n * LoginPage component provides a full page login experience\n * \n * @returns {JSX.Element} The login page\n */\nconst LoginPage: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const { authError, isLoading } = useAppSelector((state) => state.auth);\n  const isMounted = useRef(true);\n\n  // Set up the mounted ref\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!email || !password) return;\n    \n    try {\n      console.log('[LoginPage] Attempting login');\n      const resultAction = await dispatch(login({ username: email, password })).unwrap();\n      \n      // Only navigate if the component is still mounted\n      if (isMounted.current) {\n        navigate('/projects');\n      }\n    } catch (err) {\n      console.error('[LoginPage] Login error:', err);\n      // Only process the error if the component is still mounted\n      if (!isMounted.current) {\n        // If component unmounted, clear the error\n        dispatch(clearError());\n      }\n    }\n  };\n\n  const handleBackToHome = () => {\n    console.log('[LoginPage] Navigating back to home');\n    dispatch(clearError()); // Explicitly clear errors before navigation\n    navigate('/');\n  };\n\n  const handleGoToRegister = () => {\n    console.log('[LoginPage] Navigating to register');\n    dispatch(clearError()); // Explicitly clear errors before navigation\n    navigate('/register');\n  };\n\n  return (\n    <Box\n      sx={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        bgcolor: 'rgba(255, 255, 255, 0.95)',\n        zIndex: 1200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backdropFilter: 'blur(5px)',\n      }}\n    >\n      <AuthErrorHandler />\n      \n      <Container maxWidth=\"sm\">\n        <Paper\n          elevation={3}\n          sx={{\n            p: 4,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            position: 'relative',\n          }}\n        >\n          <Button\n            startIcon={<ArrowBackIcon />}\n            onClick={handleBackToHome}\n            sx={{ position: 'absolute', top: 16, left: 16 }}\n          >\n            Back\n          </Button>\n          \n          <Typography variant=\"h4\" component=\"h1\" sx={{ mb: 4, textAlign: 'center', mt: 2 }}>\n            Welcome Back\n          </Typography>\n          \n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            sx={{\n              width: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            {authError && (\n              <Alert severity=\"error\" sx={{ mb: 2, width: '100%' }}>\n                {authError}\n              </Alert>\n            )}\n            \n            <TextField\n              fullWidth\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              margin=\"normal\"\n              required\n            />\n            \n            <TextField\n              fullWidth\n              type=\"password\"\n              label=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              margin=\"normal\"\n              required\n              inputProps={{ 'data-testid': 'password-input' }}\n            />\n            \n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled={isLoading}\n            >\n              {isLoading ? 'Signing In...' : 'Sign In'}\n            </Button>\n            \n            <Box sx={{ mt: 2, textAlign: 'center', width: '100%' }}>\n              <Typography variant=\"body2\">\n                Don't have an account?{' '}\n                <Link \n                  component=\"button\" \n                  variant=\"body2\" \n                  onClick={handleGoToRegister}\n                  sx={{ fontWeight: 'bold' }}\n                >\n                  Create an Account\n                </Link>\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n      </Container>\n    </Box>\n  );\n};\n\nexport default LoginPage; ","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"\n}), 'ArrowBack');"],"names":["AuthErrorHandler","dispatch","useAppDispatch","authError","useAppSelector","state","auth","useEffect","console","log","clearError","LoginPage","email","setEmail","useState","password","setPassword","navigate","useNavigate","isLoading","isMounted","useRef","current","_jsxs","Box","sx","position","top","left","width","height","bgcolor","zIndex","display","alignItems","justifyContent","backdropFilter","children","_jsx","Container","maxWidth","Paper","elevation","p","flexDirection","Button","startIcon","ArrowBackIcon","onClick","handleBackToHome","Typography","variant","component","mb","textAlign","mt","onSubmit","async","e","preventDefault","login","username","unwrap","err","error","Alert","severity","TextField","fullWidth","label","type","value","onChange","target","margin","required","inputProps","disabled","Link","handleGoToRegister","fontWeight","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}
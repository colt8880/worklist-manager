{"version":3,"file":"static/js/414.0dfe0d56.chunk.js","mappings":"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","sources":["components/auth/AuthErrorHandler.tsx","components/auth/RegisterPage.tsx","../node_modules/@mui/icons-material/ArrowBack.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../store/store';\nimport { clearError } from '../../store/slices/authSlice';\n\n/**\n * AuthErrorHandler component\n * \n * This component is responsible for clearing auth errors when mounted\n * and when authError changes\n * \n * @returns null - This component doesn't render anything\n */\nconst AuthErrorHandler: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { authError } = useAppSelector(state => state.auth);\n  \n  // Clear errors when component mounts\n  useEffect(() => {\n    console.log('[AuthErrorHandler] Component mounted, clearing errors');\n    dispatch(clearError());\n  }, [dispatch]);\n  \n  // Also clear errors when authError changes and is not null\n  useEffect(() => {\n    if (authError) {\n      console.log('[AuthErrorHandler] authError detected, will clear on unmount');\n      \n      // Return cleanup function to clear error when component unmounts\n      return () => {\n        console.log('[AuthErrorHandler] Component unmounting, clearing errors');\n        dispatch(clearError());\n      };\n    }\n  }, [authError, dispatch]);\n  \n  // This component doesn't render anything\n  return null;\n};\n\nexport default AuthErrorHandler; ","import React, { useState, useRef, useEffect } from 'react';\nimport { \n  Box, \n  TextField, \n  Button, \n  Typography, \n  Alert, \n  Container, \n  Paper, \n  Link,\n  Grid\n} from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { useAppDispatch, useAppSelector } from '../../store/store';\nimport { register, clearError, setVerificationMessage } from '../../store/slices/authSlice';\nimport AuthErrorHandler from './AuthErrorHandler';\n\n/**\n * RegisterPage component provides a full page registration experience\n * \n * @returns {JSX.Element} The registration page\n */\nconst RegisterPage: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [zipCode, setZipCode] = useState('');\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const { authError, isLoading, verificationMessage } = useAppSelector((state) => state.auth);\n  const isMounted = useRef(true);\n\n  // Set up the mounted ref\n  useEffect(() => {\n    isMounted.current = true;\n    \n    // Clear any verification message when component mounts\n    dispatch(setVerificationMessage(null));\n    \n    return () => {\n      isMounted.current = false;\n    };\n  }, [dispatch]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!email || !password || !firstName || !lastName || !zipCode) return;\n    \n    try {\n      console.log('[RegisterPage] Attempting registration');\n      const resultAction = await dispatch(register({ \n        username: email, \n        password,\n        firstName,\n        lastName,\n        zipCode\n      })).unwrap();\n      \n      // Only navigate if the component is still mounted and email verification is not required\n      if (isMounted.current && !resultAction.requiresEmailVerification) {\n        navigate('/projects');\n      }\n    } catch (err) {\n      console.error('[RegisterPage] Registration error:', err);\n      // Only process the error if the component is still mounted\n      if (!isMounted.current) {\n        // If component unmounted, clear the error\n        dispatch(clearError());\n      }\n    }\n  };\n\n  const handleBackToHome = () => {\n    console.log('[RegisterPage] Navigating back to home');\n    dispatch(clearError());\n    dispatch(setVerificationMessage(null));\n    navigate('/');\n  };\n\n  const handleGoToLogin = () => {\n    console.log('[RegisterPage] Navigating to login');\n    dispatch(clearError());\n    dispatch(setVerificationMessage(null));\n    navigate('/login');\n  };\n\n  return (\n    <Box\n      sx={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        bgcolor: 'rgba(255, 255, 255, 0.95)',\n        zIndex: 1200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backdropFilter: 'blur(5px)',\n        overflowY: 'auto',\n        py: 4\n      }}\n    >\n      <AuthErrorHandler />\n      \n      <Container maxWidth=\"sm\">\n        <Paper\n          elevation={3}\n          sx={{\n            p: 4,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            position: 'relative',\n          }}\n        >\n          <Button\n            startIcon={<ArrowBackIcon />}\n            onClick={handleBackToHome}\n            sx={{ position: 'absolute', top: 16, left: 16 }}\n          >\n            Back\n          </Button>\n          \n          <Typography variant=\"h4\" component=\"h1\" sx={{ mb: 4, textAlign: 'center', mt: 2 }}>\n            Create Your Account\n          </Typography>\n          \n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            sx={{\n              width: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            {authError && (\n              <Alert severity=\"error\" sx={{ mb: 2, width: '100%' }}>\n                {authError}\n              </Alert>\n            )}\n            \n            {verificationMessage && (\n              <Alert severity=\"info\" sx={{ mb: 2, width: '100%' }}>\n                {verificationMessage}\n              </Alert>\n            )}\n            \n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"First Name\"\n                  value={firstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                  margin=\"normal\"\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  label=\"Last Name\"\n                  value={lastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                  margin=\"normal\"\n                  required\n                />\n              </Grid>\n            </Grid>\n            \n            <TextField\n              fullWidth\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              margin=\"normal\"\n              required\n            />\n            \n            <TextField\n              fullWidth\n              type=\"password\"\n              label=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              margin=\"normal\"\n              required\n            />\n            \n            <TextField\n              fullWidth\n              label=\"Zip Code\"\n              value={zipCode}\n              onChange={(e) => setZipCode(e.target.value)}\n              margin=\"normal\"\n              required\n            />\n            \n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled={isLoading || !!verificationMessage}\n            >\n              {isLoading ? 'Creating Account...' : verificationMessage ? 'Check Your Email' : 'Create Account'}\n            </Button>\n            \n            <Box sx={{ mt: 2, textAlign: 'center', width: '100%' }}>\n              <Typography variant=\"body2\">\n                Already have an account?{' '}\n                <Link \n                  component=\"button\" \n                  variant=\"body2\" \n                  onClick={handleGoToLogin}\n                  sx={{ fontWeight: 'bold' }}\n                >\n                  Sign In\n                </Link>\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n      </Container>\n    </Box>\n  );\n};\n\nexport default RegisterPage; ","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"\n}), 'ArrowBack');"],"names":["AuthErrorHandler","dispatch","useAppDispatch","authError","useAppSelector","state","auth","useEffect","console","log","clearError","RegisterPage","email","setEmail","useState","password","setPassword","firstName","setFirstName","lastName","setLastName","zipCode","setZipCode","navigate","useNavigate","isLoading","verificationMessage","isMounted","useRef","current","setVerificationMessage","_jsxs","Box","sx","position","top","left","width","height","bgcolor","zIndex","display","alignItems","justifyContent","backdropFilter","overflowY","py","children","_jsx","Container","maxWidth","Paper","elevation","p","flexDirection","Button","startIcon","ArrowBackIcon","onClick","handleBackToHome","Typography","variant","component","mb","textAlign","mt","onSubmit","async","e","preventDefault","resultAction","register","username","unwrap","requiresEmailVerification","err","error","Alert","severity","Grid","container","spacing","item","xs","sm","TextField","fullWidth","label","value","onChange","target","margin","required","type","disabled","Link","handleGoToLogin","fontWeight","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}